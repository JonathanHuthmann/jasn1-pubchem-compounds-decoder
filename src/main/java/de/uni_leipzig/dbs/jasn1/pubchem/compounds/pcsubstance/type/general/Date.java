/**
 * This class file was automatically generated by jASN1 v1.8.0 (http://www.openmuc.org)
 */

package de.uni_leipzig.dbs.jasn1.pubchem.compounds.pcsubstance.type.general;

import java.io.IOException;
import java.io.InputStream;
import java.io.Serializable;

import org.openmuc.jasn1.ber.BerTag;
import org.openmuc.jasn1.ber.types.string.BerVisibleString;

public class Date implements Serializable {

  private static final long serialVersionUID = 1L;

  public byte[] code = null;
  private BerVisibleString str = null;
  private DateStd std = null;

  public Date() {
  }

  public Date(byte[] code) {
    this.code = code;
  }

  public void setStr(BerVisibleString str) {
    this.str = str;
  }

  public BerVisibleString getStr() {
    return str;
  }

  public void setStd(DateStd std) {
    this.std = std;
  }

  public DateStd getStd() {
    return std;
  }

  public int decode(InputStream is) throws IOException {
    return decode(is, null);
  }

  public int decode(InputStream is, BerTag berTag) throws IOException {

    int codeLength = 0;
    BerTag passedTag = berTag;

    if (berTag == null) {
      berTag = new BerTag();
      codeLength += berTag.decode(is);
    }

    if (berTag.equals(BerVisibleString.tag)) {
      str = new BerVisibleString();
      codeLength += str.decode(is, false);
      return codeLength;
    }

    if (berTag.equals(DateStd.tag)) {
      std = new DateStd();
      codeLength += std.decode(is, false);
      return codeLength;
    }

    if (passedTag != null) {
      return 0;
    }

    throw new IOException("Error decoding CHOICE: Tag " + berTag + " matched to no item.");
  }

  public String toString() {
    StringBuilder sb = new StringBuilder();
    appendAsString(sb, 0);
    return sb.toString();
  }

  public void appendAsString(StringBuilder sb, int indentLevel) {

    if (str != null) {
      sb.append("str: ").append(str);
      return;
    }

    if (std != null) {
      sb.append("std: ");
      std.appendAsString(sb, indentLevel + 1);
      return;
    }

    sb.append("<none>");
  }

}
